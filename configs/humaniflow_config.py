import math
from yacs.config import CfgNode


_C = CfgNode()

# Model
_C.MODEL = CfgNode()
_C.MODEL.NUM_IN_CHANNELS = 18
_C.MODEL.NUM_RESNET_LAYERS = 18
_C.MODEL.INPUT_SHAPE_GLOB_CAM_FEATS_DIM = 256
_C.MODEL.NUM_SMPL_BETAS = 10

_C.MODEL.NORM_FLOW = CfgNode()
_C.MODEL.NORM_FLOW.CONTEXT_DIM = 64
_C.MODEL.NORM_FLOW.NUM_TRANSFORMS = 2
_C.MODEL.NORM_FLOW.TRANSFORM_TYPE = 'spline_coupling'  # options: ['spline_coupling', 'spline_masked', 'affine_coupling', 'affine_masked', 'additive_coupling']
_C.MODEL.NORM_FLOW.TRANSFORM_NN_HIDDEN_DIMS = [64, 32, 32]
_C.MODEL.NORM_FLOW.NUM_SPLINE_SEGMENTS = 8
_C.MODEL.NORM_FLOW.PERMUTE_TYPE = 'permute'  # options: ['permute', 'linear_plu', 'conditional_linear_plu']
_C.MODEL.NORM_FLOW.PERMUTE_NN_HIDDEN_DIMS = None
_C.MODEL.NORM_FLOW.COMPACT_SUPPORT_RADIUS = 1.5 * math.pi
_C.MODEL.NORM_FLOW.BASE_DIST_STD = 0.6

# Input Data
_C.DATA = CfgNode()
_C.DATA.BBOX_THRESHOLD = 0.95
_C.DATA.BBOX_SCALE_FACTOR = 1.2
_C.DATA.PROXY_REP_SIZE = 256
_C.DATA.HEATMAP_GAUSSIAN_STD = 4.0
_C.DATA.EDGE_NMS = True
_C.DATA.EDGE_THRESHOLD = 0.0
_C.DATA.EDGE_GAUSSIAN_STD = 1.0
_C.DATA.EDGE_GAUSSIAN_SIZE = 5

# Train
_C.TRAIN = CfgNode()
_C.TRAIN.NUM_EPOCHS = 231
_C.TRAIN.BATCH_SIZE = 72
_C.TRAIN.LR = 0.0001
_C.TRAIN.EPOCHS_PER_SAVE = 5
_C.TRAIN.PIN_MEMORY = True
_C.TRAIN.NUM_WORKERS = 2

# Train - Synthetic Data
_C.TRAIN.SYNTH_DATA = CfgNode()
_C.TRAIN.SYNTH_DATA.FOCAL_LENGTH = 300.0
_C.TRAIN.SYNTH_DATA.MEAN_CAM_T = [0.0, -0.2, 2.5]

# Train - Synthetic Data - Augmentation
_C.TRAIN.SYNTH_DATA.AUGMENT = CfgNode()

_C.TRAIN.SYNTH_DATA.AUGMENT.SMPL = CfgNode()
_C.TRAIN.SYNTH_DATA.AUGMENT.SMPL.SHAPE_STD = 1.25

_C.TRAIN.SYNTH_DATA.AUGMENT.CAM = CfgNode()
_C.TRAIN.SYNTH_DATA.AUGMENT.CAM.XY_STD = 0.05
_C.TRAIN.SYNTH_DATA.AUGMENT.CAM.DELTA_Z_RANGE = [-0.5, 0.5]

_C.TRAIN.SYNTH_DATA.AUGMENT.BBOX = CfgNode()
_C.TRAIN.SYNTH_DATA.AUGMENT.BBOX.DELTA_SCALE_RANGE = [-0.3, 0.2]
_C.TRAIN.SYNTH_DATA.AUGMENT.BBOX.DELTA_CENTRE_RANGE = [-5, 5]

_C.TRAIN.SYNTH_DATA.AUGMENT.RGB = CfgNode()
_C.TRAIN.SYNTH_DATA.AUGMENT.RGB.LIGHT_LOC_RANGE = [0.05, 3.0]
_C.TRAIN.SYNTH_DATA.AUGMENT.RGB.LIGHT_AMBIENT_RANGE = [0.4, 0.8]
_C.TRAIN.SYNTH_DATA.AUGMENT.RGB.LIGHT_DIFFUSE_RANGE = [0.4, 0.8]
_C.TRAIN.SYNTH_DATA.AUGMENT.RGB.LIGHT_SPECULAR_RANGE = [0.0, 0.5]
_C.TRAIN.SYNTH_DATA.AUGMENT.RGB.OCCLUDE_BOTTOM_PROB = 0.02
_C.TRAIN.SYNTH_DATA.AUGMENT.RGB.OCCLUDE_TOP_PROB = 0.005
_C.TRAIN.SYNTH_DATA.AUGMENT.RGB.OCCLUDE_VERTICAL_PROB = 0.05
_C.TRAIN.SYNTH_DATA.AUGMENT.RGB.PIXEL_CHANNEL_NOISE = 0.2

_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP = CfgNode()
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.REMOVE_PARTS_CLASSES = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]  # DensePose part classes
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.REMOVE_PARTS_PROBS = [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.05, 0.05, 0.05, 0.05, 0.1, 0.1,
                                                            0.1, 0.1, 0.05, 0.05, 0.05, 0.05, 0.1, 0.1, 0.1, 0.1, 0.05, 0.05]
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.REMOVE_APPENDAGE_JOINTS_PROB = 0.5
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.REMOVE_JOINTS_INDICES = [7, 8, 9, 10, 13, 14, 15, 16]  # COCO joint labels
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.REMOVE_JOINTS_PROB = 0.1
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.DELTA_J2D_DEV_RANGE = [-6, 6]
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.JOINTS_TO_SWAP = [[5, 6], [11, 12]]  # COCO joint labels
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.JOINTS_SWAP_PROB = 0.1
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.OCCLUDE_BOX_DIM = 48
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.OCCLUDE_BOX_PROB = 0.1
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.OCCLUDE_BOTTOM_PROB = 0.02
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.OCCLUDE_TOP_PROB = 0.005
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.OCCLUDE_VERTICAL_PROB = 0.05
_C.TRAIN.SYNTH_DATA.AUGMENT.PROXY_REP.EXTREME_CROP_PROB = 0.1

# Loss
_C.LOSS = CfgNode()
_C.LOSS.REDUCTION = 'mean'
_C.LOSS.J2D_LOSS_ON = 'point_est+samples'
_C.LOSS.NUM_J2D_SAMPLES = 8
_C.LOSS.APPLY_POINT_EST_LOSS = False

_C.LOSS.WEIGHTS = CfgNode()
_C.LOSS.WEIGHTS.POSE = 150.0
_C.LOSS.WEIGHTS.SHAPE = 50.0
_C.LOSS.WEIGHTS.JOINTS2D = 25000.0
_C.LOSS.WEIGHTS.GLOB_ROTMATS = 5000.0
_C.LOSS.WEIGHTS.VERTS3D = 0.0
_C.LOSS.WEIGHTS.JOINTS3D = 0.0


def get_humaniflow_cfg_defaults():
    return _C.clone()
